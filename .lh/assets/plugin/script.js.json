{
    "sourceFile": "assets/plugin/script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1694484141244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694484464576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,23 @@\n         }\r\n     });\r\n });\r\n \r\n+$(document).ready(function () {\r\n \r\n-$('#btn-search').click(function(){\r\n-    $('.header').toggleClass('open-search');\r\n-    $('.search-box').toggleClass('open');\r\n\\ No newline at end of file\n-});\n+    let isSearchIcon = true;\r\n+    $('#btn-search').click(function(){\r\n+        $('.header').toggleClass('open-search');\r\n+        $('.search-box').toggleClass('open');\r\n+    \r\n+        const img = $(this).find('img');\r\n+        if (isSearchIcon) {\r\n+            img.attr('src', 'assets/images/close.png');\r\n+        } else {\r\n+            img.attr('src', 'assets/images/search.png');\r\n+        }\r\n+    \r\n+        // Đảo ngược trạng thái của biến\r\n+        isSearchIcon = !isSearchIcon;\r\n+    \r\n+    });\r\n+})\r\n"
                },
                {
                    "date": 1694489410908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,12 @@\n $('.toggleMenu').click(function(){\r\n     $('.menu-group').toggleClass('open');\r\n });\r\n \r\n+$('.toggleMenu').click(function(){\r\n+    $('.menu-group').toggleClass('open');\r\n+});\r\n+\r\n function initializeSlider(listClass, prevButtonClass, nextButtonClass, itemsPerPage) {\r\n     const list = document.querySelector(listClass);\r\n     const prevButton = document.querySelector(prevButtonClass);\r\n     const nextButton = document.querySelector(nextButtonClass);\r\n@@ -136,9 +140,8 @@\n     });\r\n });\r\n \r\n $(document).ready(function () {\r\n-\r\n     let isSearchIcon = true;\r\n     $('#btn-search').click(function(){\r\n         $('.header').toggleClass('open-search');\r\n         $('.search-box').toggleClass('open');\r\n"
                },
                {
                    "date": 1694489480405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n $('.toggleMenu').click(function(){\r\n     $('.menu-group').toggleClass('open');\r\n });\r\n \r\n-$('.toggleMenu').click(function(){\r\n+$('.btn-card').click(function(){\r\n     $('.menu-group').toggleClass('open');\r\n });\r\n \r\n function initializeSlider(listClass, prevButtonClass, nextButtonClass, itemsPerPage) {\r\n"
                },
                {
                    "date": 1694489492640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     $('.menu-group').toggleClass('open');\r\n });\r\n \r\n $('.btn-card').click(function(){\r\n-    $('.menu-group').toggleClass('open');\r\n+    $('.cart-box').toggleClass('open');\r\n });\r\n \r\n function initializeSlider(listClass, prevButtonClass, nextButtonClass, itemsPerPage) {\r\n     const list = document.querySelector(listClass);\r\n"
                },
                {
                    "date": 1695292018898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,128 +5,285 @@\n $('.btn-card').click(function(){\r\n     $('.cart-box').toggleClass('open');\r\n });\r\n \r\n-function initializeSlider(listClass, prevButtonClass, nextButtonClass, itemsPerPage) {\r\n-    const list = document.querySelector(listClass);\r\n-    const prevButton = document.querySelector(prevButtonClass);\r\n-    const nextButton = document.querySelector(nextButtonClass);\r\n+$('.btn-add-cart').click(function(){\r\n+    $(this).closest('.group-production--list-item').find('.select-size-prd').toggleClass('show');\r\n+});\r\n \r\n-    let currentIndex = 0;\r\n-    const itemWidth = document.querySelector(\".image-style-list--item\").offsetWidth;\r\n+$(\".group-production--list-item\").on(\"mouseleave\", function() {\r\n+    $(this).find('.select-size-prd').removeClass(\"show\");\r\n+});\r\n \r\n-    function updateButtons() {\r\n-        prevButton.disabled = currentIndex === 0;\r\n-        nextButton.disabled = currentIndex >= list.children.length - itemsPerPage;\r\n-    }\r\n+$('.btn-action-filter').click(function(){\r\n+    $('.filter-box').toggleClass('open');\r\n+});\r\n \r\n-    nextButton.addEventListener(\"click\", function () {\r\n-        if (currentIndex < list.children.length - itemsPerPage) {\r\n-            currentIndex++;\r\n-            list.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n-            updateButtons();\r\n+\r\n+// function initializeSlider(listClass, prevButtonClass, nextButtonClass, itemsPerPage) {\r\n+//     const list = document.querySelector(listClass);\r\n+//     const prevButton = document.querySelector(prevButtonClass);\r\n+//     const nextButton = document.querySelector(nextButtonClass);\r\n+\r\n+//     let currentIndex = 0;\r\n+//     const itemWidth = document.querySelector(\".image-style-list--item\").offsetWidth;\r\n+\r\n+//     function updateButtons() {\r\n+//         prevButton.disabled = currentIndex === 0;\r\n+//         nextButton.disabled = currentIndex >= list.children.length - itemsPerPage;\r\n+//     }\r\n+\r\n+//     nextButton.addEventListener(\"click\", function () {\r\n+//         if (currentIndex < list.children.length - itemsPerPage) {\r\n+//             currentIndex++;\r\n+//             list.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n+//             updateButtons();\r\n+//         }\r\n+//     });\r\n+\r\n+//     prevButton.addEventListener(\"click\", function () {\r\n+//         if (currentIndex > 0) {\r\n+//             currentIndex--;\r\n+//             list.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n+//             updateButtons();\r\n+//         }\r\n+//     });\r\n+\r\n+//     window.addEventListener(\"resize\", function () {\r\n+//         currentIndex = 0;\r\n+//         list.style.transform = `translateX(0)`;\r\n+//         updateButtons();\r\n+//     });\r\n+\r\n+//     updateButtons();\r\n+// }\r\n+\r\n+// document.addEventListener(\"DOMContentLoaded\", function () {\r\n+//     initializeSlider(\".list-style-group\", \".prev-button\", \".next-button\", 1); // 1 item per page\r\n+// });\r\n+\r\n+// document.addEventListener(\"DOMContentLoaded\", function () {\r\n+//     let initialItemsPerPage = window.innerWidth > 768 ? 4 : 1;\r\n+//     initializeSlider(\".list-style-group-ctgr\", \".prev-button-ctgr\", \".next-button-ctgr\", initialItemsPerPage);\r\n+// });\r\n+\r\n+\r\n+$(document).ready(function() {\r\n+    function initializeSlider(listClass, prevButtonClass, nextButtonClass, itemsPerPage) {\r\n+        const list = $(listClass);\r\n+        const prevButton = $(prevButtonClass);\r\n+        const nextButton = $(nextButtonClass);\r\n+\r\n+        let currentIndex = 0;\r\n+        const itemWidth = $(\".image-style-list--item\").outerWidth();\r\n+\r\n+        function updateButtons() {\r\n+            prevButton.prop(\"disabled\", currentIndex === 0);\r\n+            nextButton.prop(\"disabled\", currentIndex >= list.children().length - itemsPerPage);\r\n         }\r\n-    });\r\n \r\n-    prevButton.addEventListener(\"click\", function () {\r\n-        if (currentIndex > 0) {\r\n-            currentIndex--;\r\n-            list.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n+        nextButton.click(function() {\r\n+            if (currentIndex < list.children().length - itemsPerPage) {\r\n+                currentIndex++;\r\n+                list.css(\"transform\", `translateX(-${currentIndex * itemWidth}px)`);\r\n+                updateButtons();\r\n+            }\r\n+        });\r\n+\r\n+        prevButton.click(function() {\r\n+            if (currentIndex > 0) {\r\n+                currentIndex--;\r\n+                list.css(\"transform\", `translateX(-${currentIndex * itemWidth}px)`);\r\n+                updateButtons();\r\n+            }\r\n+        });\r\n+\r\n+        $(window).resize(function() {\r\n+            currentIndex = 0;\r\n+            list.css(\"transform\", \"translateX(0)\");\r\n             updateButtons();\r\n-        }\r\n-    });\r\n+        });\r\n \r\n-    window.addEventListener(\"resize\", function () {\r\n-        currentIndex = 0;\r\n-        list.style.transform = `translateX(0)`;\r\n         updateButtons();\r\n-    });\r\n+    }\r\n \r\n-    updateButtons();\r\n-}\r\n-\r\n-document.addEventListener(\"DOMContentLoaded\", function () {\r\n     initializeSlider(\".list-style-group\", \".prev-button\", \".next-button\", 1); // 1 item per page\r\n-});\r\n \r\n-document.addEventListener(\"DOMContentLoaded\", function () {\r\n     let initialItemsPerPage = window.innerWidth > 768 ? 4 : 1;\r\n     initializeSlider(\".list-style-group-ctgr\", \".prev-button-ctgr\", \".next-button-ctgr\", initialItemsPerPage);\r\n-});\r\n \r\n \r\n-document.addEventListener('DOMContentLoaded', function () {\r\n-    const slider = document.querySelector('.slider');\r\n-    const slides = document.querySelectorAll('.slide');\r\n-    const dotsContainer = document.querySelector('.dots-container');\r\n+    const slider = $(\".slider\");\r\n+            const slides = $(\".slide\");\r\n+            const dotsContainer = $(\".dots-container\");\r\n \r\n-    let currentIndex = 0;\r\n-    let interval; // Biến để lưu trữ interval tự động chuyển slide\r\n+            let currentIndex = 0;\r\n+            let interval; // Biến để lưu trữ interval tự động chuyển slide\r\n \r\n-    // Tạo các dots tương ứng với số lượng slide\r\n-    slides.forEach((_, index) => {\r\n-        const dot = document.createElement('div');\r\n-        dot.classList.add('dot');\r\n-        dotsContainer.appendChild(dot);\r\n+            // Tạo các dots tương ứng với số lượng slide\r\n+            slides.each(function(index) {\r\n+                const dot = $(\"<div></div>\").addClass(\"dot\");\r\n+                dotsContainer.append(dot);\r\n \r\n-        dot.addEventListener('click', () => {\r\n-            goToSlide(index);\r\n-        });\r\n-    });\r\n+                dot.click(function() {\r\n+                    goToSlide(index);\r\n+                });\r\n+            });\r\n \r\n-    // Hiển thị slide đầu tiên\r\n-    slides[currentIndex].classList.add('active');\r\n-    dotsContainer.children[currentIndex].classList.add('active');\r\n+            // Hiển thị slide đầu tiên\r\n+            slides.eq(currentIndex).addClass('active');\r\n+            dotsContainer.children().eq(currentIndex).addClass('active');\r\n \r\n-    function goToSlide(index) {\r\n-        slides[currentIndex].classList.remove('active');\r\n-        dotsContainer.children[currentIndex].classList.remove('active');\r\n-        currentIndex = index;\r\n-        slides[currentIndex].classList.add('active');\r\n-        dotsContainer.children[currentIndex].classList.add('active');\r\n-        updateSliderPosition();\r\n-    }\r\n+            function goToSlide(index) {\r\n+                slides.eq(currentIndex).removeClass('active');\r\n+                dotsContainer.children().eq(currentIndex).removeClass('active');\r\n+                currentIndex = index;\r\n+                slides.eq(currentIndex).addClass('active');\r\n+                dotsContainer.children().eq(currentIndex).addClass('active');\r\n+                updateSliderPosition();\r\n+            }\r\n \r\n-    function updateSliderPosition() {\r\n-        slider.style.transform = `translateX(-${currentIndex * 100}%)`;\r\n-    }\r\n+            function updateSliderPosition() {\r\n+                slider.css(\"transform\", `translateX(-${currentIndex * 100}%)`);\r\n+            }\r\n \r\n-    // Tự động chuyển slide sau một khoảng thời gian\r\n-    function autoSlide() {\r\n-        if (currentIndex < slides.length - 1) {\r\n-            goToSlide(currentIndex + 1);\r\n-        } else {\r\n-            goToSlide(0); // Quay lại slide đầu tiên nếu đang ở slide cuối cùng\r\n-        }\r\n-    }\r\n+            // Tự động chuyển slide sau một khoảng thời gian\r\n+            function autoSlide() {\r\n+                if (currentIndex < slides.length - 1) {\r\n+                    goToSlide(currentIndex + 1);\r\n+                } else {\r\n+                    goToSlide(0); // Quay lại slide đầu tiên nếu đang ở slide cuối cùng\r\n+                }\r\n+            }\r\n \r\n-    // Bắt đầu tự động chuyển slide\r\n-    interval = setInterval(autoSlide, 5000); // 5000ms (5 giây) cho mỗi lần chuyển slide\r\n+            // Bắt đầu tự động chuyển slide\r\n+            interval = setInterval(autoSlide, 4000); // 4000ms (4 giây) cho mỗi lần chuyển slide\r\n \r\n-    // Xử lý khi người dùng hover chuột lên slider\r\n-    slider.addEventListener('mouseenter', () => {\r\n-        clearInterval(interval); // Dừng tự động chuyển slide khi hover\r\n-    });\r\n+            // Xử lý khi người dùng hover chuột lên slider\r\n+            slider.mouseenter(function() {\r\n+                clearInterval(interval); // Dừng tự động chuyển slide khi hover\r\n+            });\r\n \r\n-    // Xử lý khi người dùng rời chuột ra khỏi slider\r\n-    slider.addEventListener('mouseleave', () => {\r\n-        interval = setInterval(autoSlide, 3000); // Khởi động lại tự động chuyển slide sau khi rời chuột\r\n-    });\r\n+            // Xử lý khi người dùng rời chuột ra khỏi slider\r\n+            slider.mouseleave(function() {\r\n+                interval = setInterval(autoSlide, 4000); // Khởi động lại tự động chuyển slide sau khi rời chuột\r\n+            });\r\n \r\n-    // Xử lý nút Next và Prev\r\n-    document.querySelector('.next').addEventListener('click', () => {\r\n-        if (currentIndex < slides.length - 1) {\r\n-            goToSlide(currentIndex + 1);\r\n-        }\r\n-    });\r\n+            // // Xử lý nút Next và Prev\r\n+            // $(\".next\").click(function() {\r\n+            //     if (currentIndex < slides.length - 1) {\r\n+            //         goToSlide(currentIndex + 1);\r\n+            //     }\r\n+            // });\r\n \r\n-    document.querySelector('.prev').addEventListener('click', () => {\r\n-        if (currentIndex > 0) {\r\n-            goToSlide(currentIndex - 1);\r\n-        }\r\n-    });\r\n+            // $(\".prev\").click(function() {\r\n+            //     if (currentIndex > 0) {\r\n+            //         goToSlide(currentIndex - 1);\r\n+            //     }\r\n+            // });\r\n+\r\n+            const sliderList = $(\".slider-list\");\r\n+            const prevButton = $(\".prev-button\");\r\n+            const nextButton = $(\".next-button\");\r\n+            const itemWidth = $(\".item\").outerWidth();\r\n+\r\n+            function updateButtons() {\r\n+                prevButton.prop(\"disabled\", currentIndex === 0);\r\n+                nextButton.prop(\"disabled\", currentIndex >= sliderList.children().length - 4); // Hiển thị 4 item mỗi lần\r\n+            }\r\n+\r\n+            nextButton.click(function() {\r\n+                if (currentIndex < sliderList.children().length - 4) {\r\n+                    currentIndex++;\r\n+                    sliderList.css(\"transform\", `translateX(-${currentIndex * itemWidth}px)`);\r\n+                    updateButtons();\r\n+                }\r\n+            });\r\n+\r\n+            prevButton.click(function() {\r\n+                if (currentIndex > 0) {\r\n+                    currentIndex--;\r\n+                    sliderList.css(\"transform\", `translateX(-${currentIndex * itemWidth}px)`);\r\n+                    updateButtons();\r\n+                }\r\n+            });\r\n+\r\n+            updateButtons();\r\n });\r\n \r\n+\r\n+// document.addEventListener('DOMContentLoaded', function () {\r\n+//     const slider = document.querySelector('.slider');\r\n+//     const slides = document.querySelectorAll('.slide');\r\n+//     const dotsContainer = document.querySelector('.dots-container');\r\n+\r\n+//     let currentIndex = 0;\r\n+//     let interval; // Biến để lưu trữ interval tự động chuyển slide\r\n+\r\n+//     // Tạo các dots tương ứng với số lượng slide\r\n+//     slides.forEach((_, index) => {\r\n+//         const dot = document.createElement('div');\r\n+//         dot.classList.add('dot');\r\n+//         dotsContainer.appendChild(dot);\r\n+\r\n+//         dot.addEventListener('click', () => {\r\n+//             goToSlide(index);\r\n+//         });\r\n+//     });\r\n+\r\n+//     // Hiển thị slide đầu tiên\r\n+//     slides[currentIndex].classList.add('active');\r\n+//     dotsContainer.children[currentIndex].classList.add('active');\r\n+\r\n+//     function goToSlide(index) {\r\n+//         slides[currentIndex].classList.remove('active');\r\n+//         dotsContainer.children[currentIndex].classList.remove('active');\r\n+//         currentIndex = index;\r\n+//         slides[currentIndex].classList.add('active');\r\n+//         dotsContainer.children[currentIndex].classList.add('active');\r\n+//         updateSliderPosition();\r\n+//     }\r\n+\r\n+//     function updateSliderPosition() {\r\n+//         slider.style.transform = `translateX(-${currentIndex * 100}%)`;\r\n+//     }\r\n+\r\n+//     // Tự động chuyển slide sau một khoảng thời gian\r\n+//     function autoSlide() {\r\n+//         if (currentIndex < slides.length - 1) {\r\n+//             goToSlide(currentIndex + 1);\r\n+//         } else {\r\n+//             goToSlide(0); // Quay lại slide đầu tiên nếu đang ở slide cuối cùng\r\n+//         }\r\n+//     }\r\n+\r\n+//     // Bắt đầu tự động chuyển slide\r\n+//     interval = setInterval(autoSlide, 4000); // 4000ms (4 giây) cho mỗi lần chuyển slide\r\n+\r\n+//     // Xử lý khi người dùng hover chuột lên slider\r\n+//     slider.addEventListener('mouseenter', () => {\r\n+//         clearInterval(interval); // Dừng tự động chuyển slide khi hover\r\n+//     });\r\n+\r\n+//     // Xử lý khi người dùng rời chuột ra khỏi slider\r\n+//     slider.addEventListener('mouseleave', () => {\r\n+//         interval = setInterval(autoSlide, 4000); // Khởi động lại tự động chuyển slide sau khi rời chuột\r\n+//     });\r\n+\r\n+//     // // Xử lý nút Next và Prev\r\n+//     // document.querySelector('.next').addEventListener('click', () => {\r\n+//     //     if (currentIndex < slides.length - 1) {\r\n+//     //         goToSlide(currentIndex + 1);\r\n+//     //     }\r\n+//     // });\r\n+\r\n+//     // document.querySelector('.prev').addEventListener('click', () => {\r\n+//     //     if (currentIndex > 0) {\r\n+//     //         goToSlide(currentIndex - 1);\r\n+//     //     }\r\n+//     // });\r\n+// });\r\n+\r\n $(document).ready(function () {\r\n     // Lắng nghe sự kiện cuộn trang\r\n     $(window).scroll(function () {\r\n         // Kiểm tra vị trí cuộn (scroll position)\r\n@@ -157,4 +314,150 @@\n         isSearchIcon = !isSearchIcon;\r\n     \r\n     });\r\n })\r\n+\r\n+\r\n+// Get references to the modals, backdrop, and buttons\r\n+const modals = document.querySelectorAll(\".modal-custom\");\r\n+const modalBackdrops = document.querySelectorAll(\".modal-backdrop\");\r\n+const showModalButtons = document.querySelectorAll(\".show-modal-button\");\r\n+const closeModalButtons = document.querySelectorAll(\".close\");\r\n+\r\n+// Function to open the modal\r\n+function openModal() {\r\n+    // const modal = this.nextElementSibling; // Get the next element, which is the modal\r\n+    // modal.style.display = \"block\";\r\n+    $(modals).show();\r\n+    modalBackdrop.style.display = \"block\";\r\n+}\r\n+\r\n+// Function to close the modal\r\n+function closeModal() {\r\n+    const modal = this.closest(\".modal-custom\");\r\n+    // modal.style.display = \"none\";\r\n+    $(modal).hide();\r\n+    modalBackdrop.style.display = \"none\";\r\n+}\r\n+\r\n+// Event listeners to open the modals when the buttons are clicked\r\n+showModalButtons.forEach(button => {\r\n+    button.addEventListener(\"click\", openModal);\r\n+});\r\n+\r\n+// Event listeners to close the modals when the close buttons are clicked\r\n+closeModalButtons.forEach(button => {\r\n+    button.addEventListener(\"click\", closeModal);\r\n+});\r\n+\r\n+// Event listeners to close the modals when the backdrop is clicked\r\n+modalBackdrops.forEach(backdrop => {\r\n+    backdrop.addEventListener(\"click\", closeModal);\r\n+});\r\n+\r\n+\r\n+\r\n+// document.addEventListener(\"DOMContentLoaded\", function () {\r\n+//     const slider = document.querySelector(\".slider-list\");\r\n+//     const prevButton = document.querySelector(\".prev-button\");\r\n+//     const nextButton = document.querySelector(\".next-button\");\r\n+\r\n+//     let currentIndex = 0;\r\n+//     const itemWidth = document.querySelector(\".item\").offsetWidth;\r\n+\r\n+//     function updateButtons() {\r\n+//         prevButton.disabled = currentIndex === 0;\r\n+//         nextButton.disabled = currentIndex >= slider.children.length - 4; // Hiển thị 4 item mỗi lần\r\n+//     }\r\n+\r\n+//     nextButton.addEventListener(\"click\", function () {\r\n+//         if (currentIndex < slider.children.length - 4) {\r\n+//             currentIndex++;\r\n+//             slider.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n+//             updateButtons();\r\n+//         }\r\n+//     });\r\n+\r\n+//     prevButton.addEventListener(\"click\", function () {\r\n+//         if (currentIndex > 0) {\r\n+//             currentIndex--;\r\n+//             slider.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n+//             updateButtons();\r\n+//         }\r\n+//     });\r\n+\r\n+//     updateButtons();\r\n+// });\r\n+\r\n+\r\n+$(document).ready(function () {\r\n+    $(\".input-field\").on(\"input\", function () {\r\n+        var $input = $(this);\r\n+        var $label = $(\"label[for='\" + $input.attr(\"id\") + \"']\");\r\n+\r\n+        if ($input.val().trim() !== \"\") {\r\n+            $label.addClass(\"active\");\r\n+        } else {\r\n+            $label.removeClass(\"active\");\r\n+        }\r\n+    });\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+//filter\r\n+const rangeInput = document.querySelectorAll(\".range-input input\"),\r\n+priceInput = document.querySelectorAll(\".price-input input\"),\r\n+range = document.querySelector(\".slider-range .progress\");\r\n+let priceGap = 1000;\r\n+\r\n+priceInput.forEach((input) => {\r\n+  input.addEventListener(\"input\", (e) => {\r\n+    let minPrice = parseInt(priceInput[0].value),\r\n+      maxPrice = parseInt(priceInput[1].value);\r\n+\r\n+    if (maxPrice - minPrice >= priceGap && maxPrice <= rangeInput[1].max) {\r\n+      if (e.target.className === \"input-min\") {\r\n+        rangeInput[0].value = minPrice;\r\n+        range.style.left = (minPrice / rangeInput[0].max) * 100 + \"%\";\r\n+      } else {\r\n+        rangeInput[1].value = maxPrice;\r\n+        range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + \"%\";\r\n+      }\r\n+    }\r\n+  });\r\n+});\r\n+\r\n+rangeInput.forEach((input) => {\r\n+  input.addEventListener(\"input\", (e) => {\r\n+    let minVal = parseInt(rangeInput[0].value),\r\n+      maxVal = parseInt(rangeInput[1].value);\r\n+\r\n+    if (maxVal - minVal < priceGap) {\r\n+      if (e.target.className === \"range-min\") {\r\n+        rangeInput[0].value = maxVal - priceGap;\r\n+      } else {\r\n+        rangeInput[1].value = minVal + priceGap;\r\n+      }\r\n+    } else {\r\n+        var fomartPriceMinVal = minVal;\r\n+        var fomartPriceMaxVal = maxVal;\r\n+        fomartPriceMinVal = fomartPriceMinVal.toLocaleString('it-IT', { style: 'currency', currency: 'VND' });\r\n+        fomartPriceMaxVal = fomartPriceMaxVal.toLocaleString('it-IT', { style: 'currency', currency: 'VND' });\r\n+\r\n+      priceInput[0].value = fomartPriceMinVal;\r\n+      priceInput[1].value = fomartPriceMaxVal;\r\n+      range.style.left = (minVal / rangeInput[0].max) * 100 + \"%\";\r\n+      range.style.right = 100 - (maxVal / rangeInput[1].max) * 100 + \"%\";\r\n+    }\r\n+  });\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+// Xử lý sự kiện khi lựa chọn trong dropdown được click\r\n+$(\".dropdown-item\").click(function () {\r\n+    const selectedValue = $(this).data(\"value\");\r\n+    $(\"#dropdownSort\").text(selectedValue);\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695349645576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,5 +459,30 @@\n // Xử lý sự kiện khi lựa chọn trong dropdown được click\r\n $(\".dropdown-item\").click(function () {\r\n     const selectedValue = $(this).data(\"value\");\r\n     $(\"#dropdownSort\").text(selectedValue);\r\n-});\n\\ No newline at end of file\n+});\r\n+\r\n+\r\n+\r\n+// Kiểm tra kích thước màn hình\r\n+function checkWindowSize() {\r\n+    if (window.innerWidth >= 768) {\r\n+      // Nếu màn hình lớn hơn hoặc bằng 768px, sử dụng trạng thái hover\r\n+      $('.dropdown').hover(function() {\r\n+        $(this).addClass('show');\r\n+        $(this).find('.dropdown-menu').addClass('show');\r\n+      }, function() {\r\n+        $(this).removeClass('show');\r\n+        $(this).find('.dropdown-menu').removeClass('show');\r\n+      });\r\n+    } else {\r\n+      // Nếu màn hình nhỏ hơn 768px, sử dụng trạng thái click\r\n+      $('.dropdown').off('mouseenter mouseleave');\r\n+    }\r\n+  }\r\n+  \r\n+  // Gọi hàm kiểm tra kích thước màn hình khi tải trang và khi thay đổi kích thước màn hình\r\n+  $(document).ready(function() {\r\n+    checkWindowSize();\r\n+    $(window).resize(checkWindowSize);\r\n+  });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695349656290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -467,9 +467,9 @@\n // Kiểm tra kích thước màn hình\r\n function checkWindowSize() {\r\n     if (window.innerWidth >= 768) {\r\n       // Nếu màn hình lớn hơn hoặc bằng 768px, sử dụng trạng thái hover\r\n-      $('.dropdown').hover(function() {\r\n+      $('btn-sort-group .dropdown').hover(function() {\r\n         $(this).addClass('show');\r\n         $(this).find('.dropdown-menu').addClass('show');\r\n       }, function() {\r\n         $(this).removeClass('show');\r\n"
                },
                {
                    "date": 1695349667192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -467,9 +467,9 @@\n // Kiểm tra kích thước màn hình\r\n function checkWindowSize() {\r\n     if (window.innerWidth >= 768) {\r\n       // Nếu màn hình lớn hơn hoặc bằng 768px, sử dụng trạng thái hover\r\n-      $('btn-sort-group .dropdown').hover(function() {\r\n+      $('.btn-sort-group .dropdown').hover(function() {\r\n         $(this).addClass('show');\r\n         $(this).find('.dropdown-menu').addClass('show');\r\n       }, function() {\r\n         $(this).removeClass('show');\r\n"
                },
                {
                    "date": 1695349686123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -476,9 +476,9 @@\n         $(this).find('.dropdown-menu').removeClass('show');\r\n       });\r\n     } else {\r\n       // Nếu màn hình nhỏ hơn 768px, sử dụng trạng thái click\r\n-      $('.dropdown').off('mouseenter mouseleave');\r\n+      $('.btn-sort-group .dropdown').off('mouseenter mouseleave');\r\n     }\r\n   }\r\n   \r\n   // Gọi hàm kiểm tra kích thước màn hình khi tải trang và khi thay đổi kích thước màn hình\r\n"
                },
                {
                    "date": 1695349721609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -467,18 +467,18 @@\n // Kiểm tra kích thước màn hình\r\n function checkWindowSize() {\r\n     if (window.innerWidth >= 768) {\r\n       // Nếu màn hình lớn hơn hoặc bằng 768px, sử dụng trạng thái hover\r\n-      $('.btn-sort-group .dropdown').hover(function() {\r\n+      $('.btn-sort-group').hover(function() {\r\n         $(this).addClass('show');\r\n         $(this).find('.dropdown-menu').addClass('show');\r\n       }, function() {\r\n         $(this).removeClass('show');\r\n         $(this).find('.dropdown-menu').removeClass('show');\r\n       });\r\n     } else {\r\n       // Nếu màn hình nhỏ hơn 768px, sử dụng trạng thái click\r\n-      $('.btn-sort-group .dropdown').off('mouseenter mouseleave');\r\n+      $('.btn-sort-group').off('mouseenter mouseleave');\r\n     }\r\n   }\r\n   \r\n   // Gọi hàm kiểm tra kích thước màn hình khi tải trang và khi thay đổi kích thước màn hình\r\n"
                },
                {
                    "date": 1695354545228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,12 @@\n $('.btn-card').click(function(){\r\n     $('.cart-box').toggleClass('open');\r\n });\r\n \r\n+$('.btn-card').click(function(){\r\n+    $('.cart-box').toggleClass('open');\r\n+});\r\n+\r\n $('.btn-add-cart').click(function(){\r\n     $(this).closest('.group-production--list-item').find('.select-size-prd').toggleClass('show');\r\n });\r\n \r\n"
                },
                {
                    "date": 1695355454793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n $('.btn-card').click(function(){\r\n     $('.cart-box').toggleClass('open');\r\n });\r\n \r\n-$('.btn-card').click(function(){\r\n-    $('.cart-box').toggleClass('open');\r\n+$('.btn-login').click(function(){\r\n+    $('.login-sibar').toggleClass('open');\r\n });\r\n \r\n $('.btn-add-cart').click(function(){\r\n     $(this).closest('.group-production--list-item').find('.select-size-prd').toggleClass('show');\r\n"
                },
                {
                    "date": 1695358647182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,11 @@\n $('.btn-action-filter').click(function(){\r\n     $('.filter-box').toggleClass('open');\r\n });\r\n \r\n+$(document).ready(function () {\r\n+    $(\".select2\").select2();\r\n+});\r\n \r\n // function initializeSlider(listClass, prevButtonClass, nextButtonClass, itemsPerPage) {\r\n //     const list = document.querySelector(listClass);\r\n //     const prevButton = document.querySelector(prevButtonClass);\r\n"
                },
                {
                    "date": 1695885354318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,505 @@\n+$('.toggleMenu').click(function(){\r\n+    $('.menu-group').toggleClass('open');\r\n+});\r\n+\r\n+$('.btn-card').click(function(){\r\n+    $('.cart-box').toggleClass('open');\r\n+});\r\n+\r\n+$('.btn-login').click(function(){\r\n+    $('.login-sibar').toggleClass('open');\r\n+});\r\n+\r\n+$('.btn-add-cart').click(function(){\r\n+    $(this).closest('.group-production--list-item').find('.select-size-prd').toggleClass('show');\r\n+});\r\n+\r\n+$(\".group-production--list-item\").on(\"mouseleave\", function() {\r\n+    $(this).find('.select-size-prd').removeClass(\"show\");\r\n+});\r\n+\r\n+$('.btn-action-filter').click(function(){\r\n+    $('.filter-box').toggleClass('open');\r\n+});\r\n+\r\n+$(document).ready(function () {\r\n+    $(\".select2\").select2();\r\n+});\r\n+\r\n+// function initializeSlider(listClass, prevButtonClass, nextButtonClass, itemsPerPage) {\r\n+//     const list = document.querySelector(listClass);\r\n+//     const prevButton = document.querySelector(prevButtonClass);\r\n+//     const nextButton = document.querySelector(nextButtonClass);\r\n+\r\n+//     let currentIndex = 0;\r\n+//     const itemWidth = document.querySelector(\".image-style-list--item\").offsetWidth;\r\n+\r\n+//     function updateButtons() {\r\n+//         prevButton.disabled = currentIndex === 0;\r\n+//         nextButton.disabled = currentIndex >= list.children.length - itemsPerPage;\r\n+//     }\r\n+\r\n+//     nextButton.addEventListener(\"click\", function () {\r\n+//         if (currentIndex < list.children.length - itemsPerPage) {\r\n+//             currentIndex++;\r\n+//             list.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n+//             updateButtons();\r\n+//         }\r\n+//     });\r\n+\r\n+//     prevButton.addEventListener(\"click\", function () {\r\n+//         if (currentIndex > 0) {\r\n+//             currentIndex--;\r\n+//             list.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n+//             updateButtons();\r\n+//         }\r\n+//     });\r\n+\r\n+//     window.addEventListener(\"resize\", function () {\r\n+//         currentIndex = 0;\r\n+//         list.style.transform = `translateX(0)`;\r\n+//         updateButtons();\r\n+//     });\r\n+\r\n+//     updateButtons();\r\n+// }\r\n+\r\n+// document.addEventListener(\"DOMContentLoaded\", function () {\r\n+//     initializeSlider(\".list-style-group\", \".prev-button\", \".next-button\", 1); // 1 item per page\r\n+// });\r\n+\r\n+// document.addEventListener(\"DOMContentLoaded\", function () {\r\n+//     let initialItemsPerPage = window.innerWidth > 768 ? 4 : 1;\r\n+//     initializeSlider(\".list-style-group-ctgr\", \".prev-button-ctgr\", \".next-button-ctgr\", initialItemsPerPage);\r\n+// });\r\n+\r\n+\r\n+$(document).ready(function() {\r\n+    function initializeSlider(listClass, prevButtonClass, nextButtonClass, itemsPerPage) {\r\n+        const list = $(listClass);\r\n+        const prevButton = $(prevButtonClass);\r\n+        const nextButton = $(nextButtonClass);\r\n+\r\n+        let currentIndex = 0;\r\n+        const itemWidth = $(\".image-style-list--item\").outerWidth();\r\n+\r\n+        function updateButtons() {\r\n+            prevButton.prop(\"disabled\", currentIndex === 0);\r\n+            nextButton.prop(\"disabled\", currentIndex >= list.children().length - itemsPerPage);\r\n+        }\r\n+\r\n+        nextButton.click(function() {\r\n+            if (currentIndex < list.children().length - itemsPerPage) {\r\n+                currentIndex++;\r\n+                list.css(\"transform\", `translateX(-${currentIndex * itemWidth}px)`);\r\n+                updateButtons();\r\n+            }\r\n+        });\r\n+\r\n+        prevButton.click(function() {\r\n+            if (currentIndex > 0) {\r\n+                currentIndex--;\r\n+                list.css(\"transform\", `translateX(-${currentIndex * itemWidth}px)`);\r\n+                updateButtons();\r\n+            }\r\n+        });\r\n+\r\n+        $(window).resize(function() {\r\n+            currentIndex = 0;\r\n+            list.css(\"transform\", \"translateX(0)\");\r\n+            updateButtons();\r\n+        });\r\n+\r\n+        updateButtons();\r\n+    }\r\n+\r\n+    initializeSlider(\".list-style-group\", \".prev-button\", \".next-button\", 1); // 1 item per page\r\n+\r\n+    let initialItemsPerPage = window.innerWidth > 768 ? 4 : 1;\r\n+    initializeSlider(\".list-style-group-ctgr\", \".prev-button-ctgr\", \".next-button-ctgr\", initialItemsPerPage);\r\n+\r\n+\r\n+    const slider = $(\".slider\");\r\n+            const slides = $(\".slide\");\r\n+            const dotsContainer = $(\".dots-container\");\r\n+\r\n+            let currentIndex = 0;\r\n+            let interval; // Biến để lưu trữ interval tự động chuyển slide\r\n+\r\n+            // Tạo các dots tương ứng với số lượng slide\r\n+            slides.each(function(index) {\r\n+                const dot = $(\"<div></div>\").addClass(\"dot\");\r\n+                dotsContainer.append(dot);\r\n+\r\n+                dot.click(function() {\r\n+                    goToSlide(index);\r\n+                });\r\n+            });\r\n+\r\n+            // Hiển thị slide đầu tiên\r\n+            slides.eq(currentIndex).addClass('active');\r\n+            dotsContainer.children().eq(currentIndex).addClass('active');\r\n+\r\n+            function goToSlide(index) {\r\n+                slides.eq(currentIndex).removeClass('active');\r\n+                dotsContainer.children().eq(currentIndex).removeClass('active');\r\n+                currentIndex = index;\r\n+                slides.eq(currentIndex).addClass('active');\r\n+                dotsContainer.children().eq(currentIndex).addClass('active');\r\n+                updateSliderPosition();\r\n+            }\r\n+\r\n+            function updateSliderPosition() {\r\n+                slider.css(\"transform\", `translateX(-${currentIndex * 100}%)`);\r\n+            }\r\n+\r\n+            // Tự động chuyển slide sau một khoảng thời gian\r\n+            function autoSlide() {\r\n+                if (currentIndex < slides.length - 1) {\r\n+                    goToSlide(currentIndex + 1);\r\n+                } else {\r\n+                    goToSlide(0); // Quay lại slide đầu tiên nếu đang ở slide cuối cùng\r\n+                }\r\n+            }\r\n+\r\n+            // Bắt đầu tự động chuyển slide\r\n+            interval = setInterval(autoSlide, 4000); // 4000ms (4 giây) cho mỗi lần chuyển slide\r\n+\r\n+            // Xử lý khi người dùng hover chuột lên slider\r\n+            slider.mouseenter(function() {\r\n+                clearInterval(interval); // Dừng tự động chuyển slide khi hover\r\n+            });\r\n+\r\n+            // Xử lý khi người dùng rời chuột ra khỏi slider\r\n+            slider.mouseleave(function() {\r\n+                interval = setInterval(autoSlide, 4000); // Khởi động lại tự động chuyển slide sau khi rời chuột\r\n+            });\r\n+\r\n+            // // Xử lý nút Next và Prev\r\n+            // $(\".next\").click(function() {\r\n+            //     if (currentIndex < slides.length - 1) {\r\n+            //         goToSlide(currentIndex + 1);\r\n+            //     }\r\n+            // });\r\n+\r\n+            // $(\".prev\").click(function() {\r\n+            //     if (currentIndex > 0) {\r\n+            //         goToSlide(currentIndex - 1);\r\n+            //     }\r\n+            // });\r\n+\r\n+            const sliderList = $(\".slider-list\");\r\n+            const prevButton = $(\".prev-button\");\r\n+            const nextButton = $(\".next-button\");\r\n+            const itemWidth = $(\".item\").outerWidth();\r\n+\r\n+            function updateButtons() {\r\n+                prevButton.prop(\"disabled\", currentIndex === 0);\r\n+                nextButton.prop(\"disabled\", currentIndex >= sliderList.children().length - 4); // Hiển thị 4 item mỗi lần\r\n+            }\r\n+\r\n+            nextButton.click(function() {\r\n+                if (currentIndex < sliderList.children().length - 4) {\r\n+                    currentIndex++;\r\n+                    sliderList.css(\"transform\", `translateX(-${currentIndex * itemWidth}px)`);\r\n+                    updateButtons();\r\n+                }\r\n+            });\r\n+\r\n+            prevButton.click(function() {\r\n+                if (currentIndex > 0) {\r\n+                    currentIndex--;\r\n+                    sliderList.css(\"transform\", `translateX(-${currentIndex * itemWidth}px)`);\r\n+                    updateButtons();\r\n+                }\r\n+            });\r\n+\r\n+            updateButtons();\r\n+});\r\n+\r\n+\r\n+// document.addEventListener('DOMContentLoaded', function () {\r\n+//     const slider = document.querySelector('.slider');\r\n+//     const slides = document.querySelectorAll('.slide');\r\n+//     const dotsContainer = document.querySelector('.dots-container');\r\n+\r\n+//     let currentIndex = 0;\r\n+//     let interval; // Biến để lưu trữ interval tự động chuyển slide\r\n+\r\n+//     // Tạo các dots tương ứng với số lượng slide\r\n+//     slides.forEach((_, index) => {\r\n+//         const dot = document.createElement('div');\r\n+//         dot.classList.add('dot');\r\n+//         dotsContainer.appendChild(dot);\r\n+\r\n+//         dot.addEventListener('click', () => {\r\n+//             goToSlide(index);\r\n+//         });\r\n+//     });\r\n+\r\n+//     // Hiển thị slide đầu tiên\r\n+//     slides[currentIndex].classList.add('active');\r\n+//     dotsContainer.children[currentIndex].classList.add('active');\r\n+\r\n+//     function goToSlide(index) {\r\n+//         slides[currentIndex].classList.remove('active');\r\n+//         dotsContainer.children[currentIndex].classList.remove('active');\r\n+//         currentIndex = index;\r\n+//         slides[currentIndex].classList.add('active');\r\n+//         dotsContainer.children[currentIndex].classList.add('active');\r\n+//         updateSliderPosition();\r\n+//     }\r\n+\r\n+//     function updateSliderPosition() {\r\n+//         slider.style.transform = `translateX(-${currentIndex * 100}%)`;\r\n+//     }\r\n+\r\n+//     // Tự động chuyển slide sau một khoảng thời gian\r\n+//     function autoSlide() {\r\n+//         if (currentIndex < slides.length - 1) {\r\n+//             goToSlide(currentIndex + 1);\r\n+//         } else {\r\n+//             goToSlide(0); // Quay lại slide đầu tiên nếu đang ở slide cuối cùng\r\n+//         }\r\n+//     }\r\n+\r\n+//     // Bắt đầu tự động chuyển slide\r\n+//     interval = setInterval(autoSlide, 4000); // 4000ms (4 giây) cho mỗi lần chuyển slide\r\n+\r\n+//     // Xử lý khi người dùng hover chuột lên slider\r\n+//     slider.addEventListener('mouseenter', () => {\r\n+//         clearInterval(interval); // Dừng tự động chuyển slide khi hover\r\n+//     });\r\n+\r\n+//     // Xử lý khi người dùng rời chuột ra khỏi slider\r\n+//     slider.addEventListener('mouseleave', () => {\r\n+//         interval = setInterval(autoSlide, 4000); // Khởi động lại tự động chuyển slide sau khi rời chuột\r\n+//     });\r\n+\r\n+//     // // Xử lý nút Next và Prev\r\n+//     // document.querySelector('.next').addEventListener('click', () => {\r\n+//     //     if (currentIndex < slides.length - 1) {\r\n+//     //         goToSlide(currentIndex + 1);\r\n+//     //     }\r\n+//     // });\r\n+\r\n+//     // document.querySelector('.prev').addEventListener('click', () => {\r\n+//     //     if (currentIndex > 0) {\r\n+//     //         goToSlide(currentIndex - 1);\r\n+//     //     }\r\n+//     // });\r\n+// });\r\n+\r\n+$(document).ready(function () {\r\n+    // Lắng nghe sự kiện cuộn trang\r\n+    $(window).scroll(function () {\r\n+        // Kiểm tra vị trí cuộn (scroll position)\r\n+        if ($(this).scrollTop() > 200) {\r\n+            // Nếu cuộn xuống dưới 200px, thêm class 'scrolled' vào header\r\n+            $('.header').addClass('scrolled');\r\n+        } else {\r\n+            // Nếu cuộn lên trên 200px, loại bỏ class 'scrolled' khỏi header\r\n+            $('.header').removeClass('scrolled');\r\n+        }\r\n+    });\r\n+});\r\n+\r\n+$(document).ready(function () {\r\n+    let isSearchIcon = true;\r\n+    $('#btn-search').click(function(){\r\n+        $('.header').toggleClass('open-search');\r\n+        $('.search-box').toggleClass('open');\r\n+    \r\n+        const img = $(this).find('img');\r\n+        if (isSearchIcon) {\r\n+            img.attr('src', 'assets/images/close.png');\r\n+        } else {\r\n+            img.attr('src', 'assets/images/search.png');\r\n+        }\r\n+    \r\n+        // Đảo ngược trạng thái của biến\r\n+        isSearchIcon = !isSearchIcon;\r\n+    \r\n+    });\r\n+})\r\n+\r\n+\r\n+// Get references to the modals, backdrop, and buttons\r\n+const modals = document.querySelectorAll(\".modal-custom\");\r\n+const modalBackdrops = document.querySelectorAll(\".modal-backdrop\");\r\n+const showModalButtons = document.querySelectorAll(\".show-modal-button\");\r\n+const closeModalButtons = document.querySelectorAll(\".close\");\r\n+\r\n+// Function to open the modal\r\n+function openModal() {\r\n+    // const modal = this.nextElementSibling; // Get the next element, which is the modal\r\n+    // modal.style.display = \"block\";\r\n+    $(modals).show();\r\n+    modalBackdrop.style.display = \"block\";\r\n+}\r\n+\r\n+// Function to close the modal\r\n+function closeModal() {\r\n+    const modal = this.closest(\".modal-custom\");\r\n+    // modal.style.display = \"none\";\r\n+    $(modal).hide();\r\n+    modalBackdrop.style.display = \"none\";\r\n+}\r\n+\r\n+// Event listeners to open the modals when the buttons are clicked\r\n+showModalButtons.forEach(button => {\r\n+    button.addEventListener(\"click\", openModal);\r\n+});\r\n+\r\n+// Event listeners to close the modals when the close buttons are clicked\r\n+closeModalButtons.forEach(button => {\r\n+    button.addEventListener(\"click\", closeModal);\r\n+});\r\n+\r\n+// Event listeners to close the modals when the backdrop is clicked\r\n+modalBackdrops.forEach(backdrop => {\r\n+    backdrop.addEventListener(\"click\", closeModal);\r\n+});\r\n+\r\n+\r\n+\r\n+// document.addEventListener(\"DOMContentLoaded\", function () {\r\n+//     const slider = document.querySelector(\".slider-list\");\r\n+//     const prevButton = document.querySelector(\".prev-button\");\r\n+//     const nextButton = document.querySelector(\".next-button\");\r\n+\r\n+//     let currentIndex = 0;\r\n+//     const itemWidth = document.querySelector(\".item\").offsetWidth;\r\n+\r\n+//     function updateButtons() {\r\n+//         prevButton.disabled = currentIndex === 0;\r\n+//         nextButton.disabled = currentIndex >= slider.children.length - 4; // Hiển thị 4 item mỗi lần\r\n+//     }\r\n+\r\n+//     nextButton.addEventListener(\"click\", function () {\r\n+//         if (currentIndex < slider.children.length - 4) {\r\n+//             currentIndex++;\r\n+//             slider.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n+//             updateButtons();\r\n+//         }\r\n+//     });\r\n+\r\n+//     prevButton.addEventListener(\"click\", function () {\r\n+//         if (currentIndex > 0) {\r\n+//             currentIndex--;\r\n+//             slider.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n+//             updateButtons();\r\n+//         }\r\n+//     });\r\n+\r\n+//     updateButtons();\r\n+// });\r\n+\r\n+\r\n+$(document).ready(function () {\r\n+    $(\".input-field\").on(\"input\", function () {\r\n+        var $input = $(this);\r\n+        var $label = $(\"label[for='\" + $input.attr(\"id\") + \"']\");\r\n+\r\n+        if ($input.val().trim() !== \"\") {\r\n+            $label.addClass(\"active\");\r\n+        } else {\r\n+            $label.removeClass(\"active\");\r\n+        }\r\n+    });\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+//filter\r\n+const rangeInput = document.querySelectorAll(\".range-input input\"),\r\n+priceInput = document.querySelectorAll(\".price-input input\"),\r\n+range = document.querySelector(\".slider-range .progress\");\r\n+let priceGap = 1000;\r\n+\r\n+priceInput.forEach((input) => {\r\n+  input.addEventListener(\"input\", (e) => {\r\n+    let minPrice = parseInt(priceInput[0].value),\r\n+      maxPrice = parseInt(priceInput[1].value);\r\n+\r\n+    if (maxPrice - minPrice >= priceGap && maxPrice <= rangeInput[1].max) {\r\n+      if (e.target.className === \"input-min\") {\r\n+        rangeInput[0].value = minPrice;\r\n+        range.style.left = (minPrice / rangeInput[0].max) * 100 + \"%\";\r\n+      } else {\r\n+        rangeInput[1].value = maxPrice;\r\n+        range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + \"%\";\r\n+      }\r\n+    }\r\n+  });\r\n+});\r\n+\r\n+rangeInput.forEach((input) => {\r\n+  input.addEventListener(\"input\", (e) => {\r\n+    let minVal = parseInt(rangeInput[0].value),\r\n+      maxVal = parseInt(rangeInput[1].value);\r\n+\r\n+    if (maxVal - minVal < priceGap) {\r\n+      if (e.target.className === \"range-min\") {\r\n+        rangeInput[0].value = maxVal - priceGap;\r\n+      } else {\r\n+        rangeInput[1].value = minVal + priceGap;\r\n+      }\r\n+    } else {\r\n+        var fomartPriceMinVal = minVal;\r\n+        var fomartPriceMaxVal = maxVal;\r\n+        fomartPriceMinVal = fomartPriceMinVal.toLocaleString('it-IT', { style: 'currency', currency: 'VND' });\r\n+        fomartPriceMaxVal = fomartPriceMaxVal.toLocaleString('it-IT', { style: 'currency', currency: 'VND' });\r\n+\r\n+      priceInput[0].value = fomartPriceMinVal;\r\n+      priceInput[1].value = fomartPriceMaxVal;\r\n+      range.style.left = (minVal / rangeInput[0].max) * 100 + \"%\";\r\n+      range.style.right = 100 - (maxVal / rangeInput[1].max) * 100 + \"%\";\r\n+    }\r\n+  });\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+// Xử lý sự kiện khi lựa chọn trong dropdown được click\r\n+$(\".dropdown-item\").click(function () {\r\n+    const selectedValue = $(this).data(\"value\");\r\n+    $(\"#dropdownSort\").text(selectedValue);\r\n+});\r\n+\r\n+\r\n+\r\n+// Kiểm tra kích thước màn hình\r\n+function checkWindowSize() {\r\n+    if (window.innerWidth >= 768) {\r\n+      // Nếu màn hình lớn hơn hoặc bằng 768px, sử dụng trạng thái hover\r\n+      $('.btn-sort-group').hover(function() {\r\n+        $(this).addClass('show');\r\n+        $(this).find('.dropdown-menu').addClass('show');\r\n+      }, function() {\r\n+        $(this).removeClass('show');\r\n+        $(this).find('.dropdown-menu').removeClass('show');\r\n+      });\r\n+    } else {\r\n+      // Nếu màn hình nhỏ hơn 768px, sử dụng trạng thái click\r\n+      $('.btn-sort-group').off('mouseenter mouseleave');\r\n+    }\r\n+  }\r\n+  \r\n+  // Gọi hàm kiểm tra kích thước màn hình khi tải trang và khi thay đổi kích thước màn hình\r\n+  $(document).ready(function() {\r\n+    checkWindowSize();\r\n+    $(window).resize(checkWindowSize);\r\n+  });\r\n+\r\n+\r\n+\r\n+  \r\n+  $('.list-vnpay li input').click(function () {\r\n+    $('#BankCode').val($(this).val());\r\n+\r\n+    $('.list-vnpay li label').removeClass('active');\r\n+    $(this).parent().addClass('active');\r\n+})\n\\ No newline at end of file\n"
                }
            ],
            "date": 1694484141244,
            "name": "Commit-0",
            "content": "$('.toggleMenu').click(function(){\r\n    $('.menu-group').toggleClass('open');\r\n});\r\n\r\nfunction initializeSlider(listClass, prevButtonClass, nextButtonClass, itemsPerPage) {\r\n    const list = document.querySelector(listClass);\r\n    const prevButton = document.querySelector(prevButtonClass);\r\n    const nextButton = document.querySelector(nextButtonClass);\r\n\r\n    let currentIndex = 0;\r\n    const itemWidth = document.querySelector(\".image-style-list--item\").offsetWidth;\r\n\r\n    function updateButtons() {\r\n        prevButton.disabled = currentIndex === 0;\r\n        nextButton.disabled = currentIndex >= list.children.length - itemsPerPage;\r\n    }\r\n\r\n    nextButton.addEventListener(\"click\", function () {\r\n        if (currentIndex < list.children.length - itemsPerPage) {\r\n            currentIndex++;\r\n            list.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n            updateButtons();\r\n        }\r\n    });\r\n\r\n    prevButton.addEventListener(\"click\", function () {\r\n        if (currentIndex > 0) {\r\n            currentIndex--;\r\n            list.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n            updateButtons();\r\n        }\r\n    });\r\n\r\n    window.addEventListener(\"resize\", function () {\r\n        currentIndex = 0;\r\n        list.style.transform = `translateX(0)`;\r\n        updateButtons();\r\n    });\r\n\r\n    updateButtons();\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    initializeSlider(\".list-style-group\", \".prev-button\", \".next-button\", 1); // 1 item per page\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    let initialItemsPerPage = window.innerWidth > 768 ? 4 : 1;\r\n    initializeSlider(\".list-style-group-ctgr\", \".prev-button-ctgr\", \".next-button-ctgr\", initialItemsPerPage);\r\n});\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    const slider = document.querySelector('.slider');\r\n    const slides = document.querySelectorAll('.slide');\r\n    const dotsContainer = document.querySelector('.dots-container');\r\n\r\n    let currentIndex = 0;\r\n    let interval; // Biến để lưu trữ interval tự động chuyển slide\r\n\r\n    // Tạo các dots tương ứng với số lượng slide\r\n    slides.forEach((_, index) => {\r\n        const dot = document.createElement('div');\r\n        dot.classList.add('dot');\r\n        dotsContainer.appendChild(dot);\r\n\r\n        dot.addEventListener('click', () => {\r\n            goToSlide(index);\r\n        });\r\n    });\r\n\r\n    // Hiển thị slide đầu tiên\r\n    slides[currentIndex].classList.add('active');\r\n    dotsContainer.children[currentIndex].classList.add('active');\r\n\r\n    function goToSlide(index) {\r\n        slides[currentIndex].classList.remove('active');\r\n        dotsContainer.children[currentIndex].classList.remove('active');\r\n        currentIndex = index;\r\n        slides[currentIndex].classList.add('active');\r\n        dotsContainer.children[currentIndex].classList.add('active');\r\n        updateSliderPosition();\r\n    }\r\n\r\n    function updateSliderPosition() {\r\n        slider.style.transform = `translateX(-${currentIndex * 100}%)`;\r\n    }\r\n\r\n    // Tự động chuyển slide sau một khoảng thời gian\r\n    function autoSlide() {\r\n        if (currentIndex < slides.length - 1) {\r\n            goToSlide(currentIndex + 1);\r\n        } else {\r\n            goToSlide(0); // Quay lại slide đầu tiên nếu đang ở slide cuối cùng\r\n        }\r\n    }\r\n\r\n    // Bắt đầu tự động chuyển slide\r\n    interval = setInterval(autoSlide, 5000); // 5000ms (5 giây) cho mỗi lần chuyển slide\r\n\r\n    // Xử lý khi người dùng hover chuột lên slider\r\n    slider.addEventListener('mouseenter', () => {\r\n        clearInterval(interval); // Dừng tự động chuyển slide khi hover\r\n    });\r\n\r\n    // Xử lý khi người dùng rời chuột ra khỏi slider\r\n    slider.addEventListener('mouseleave', () => {\r\n        interval = setInterval(autoSlide, 3000); // Khởi động lại tự động chuyển slide sau khi rời chuột\r\n    });\r\n\r\n    // Xử lý nút Next và Prev\r\n    document.querySelector('.next').addEventListener('click', () => {\r\n        if (currentIndex < slides.length - 1) {\r\n            goToSlide(currentIndex + 1);\r\n        }\r\n    });\r\n\r\n    document.querySelector('.prev').addEventListener('click', () => {\r\n        if (currentIndex > 0) {\r\n            goToSlide(currentIndex - 1);\r\n        }\r\n    });\r\n});\r\n\r\n$(document).ready(function () {\r\n    // Lắng nghe sự kiện cuộn trang\r\n    $(window).scroll(function () {\r\n        // Kiểm tra vị trí cuộn (scroll position)\r\n        if ($(this).scrollTop() > 200) {\r\n            // Nếu cuộn xuống dưới 200px, thêm class 'scrolled' vào header\r\n            $('.header').addClass('scrolled');\r\n        } else {\r\n            // Nếu cuộn lên trên 200px, loại bỏ class 'scrolled' khỏi header\r\n            $('.header').removeClass('scrolled');\r\n        }\r\n    });\r\n});\r\n\r\n\r\n$('#btn-search').click(function(){\r\n    $('.header').toggleClass('open-search');\r\n    $('.search-box').toggleClass('open');\r\n});"
        }
    ]
}